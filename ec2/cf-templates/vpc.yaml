---
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  TeamName:
    Type: String
  DnsRootDomain:
    Type: String
  VpcCidr:
    Type: String
  VpcSubnet1Cidr:
    Type: String
  VpcSubnet2Cidr:
    Type: String
  VpcSubnet3Cidr:
    Type: String
  Region:
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'false'
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${TeamName}"

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub "${TeamName}-RouteTablePublic"

  RoutePublic:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  Subnet1Public:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref VpcSubnet1Cidr
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: ''
      Tags:
      - Key: Name
        Value: !Sub "${TeamName}-public-1"
  RouteTableAssociation1Public:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1Public
      RouteTableId: !Ref RouteTable

  Subnet2Public:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref VpcSubnet2Cidr
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: ''
      Tags:
      - Key: Name
        Value: !Sub "${TeamName}-public-2"
  RouteTableAssociation2Public:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2Public
      RouteTableId: !Ref RouteTable

  Subnet3Public:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref VpcSubnet3Cidr
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: ''
      Tags:
      - Key: Name
        Value: !Sub "${TeamName}-public-3"
  RouteTableAssociation3Public:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet3Public
      RouteTableId: !Ref RouteTable

Outputs:

  VPCId:
    Export:
      Name: !Sub "${AWS::StackName}-VPCId"
    Value: !Ref VPC
  VPCCidr:
      Export:
        Name: !Sub "${AWS::StackName}-VPCCidr"
      Value: !Ref VpcCidr

  HostedZoneName:
    Export:
      Name: !Sub "${AWS::StackName}-HostedZoneName"
    Value: !Sub "${TeamName}.${DnsRootDomain}"

  Subnet1PublicId:
    Export:
      Name: !Sub "${AWS::StackName}-Subnet1PublicId"
    Value: !Ref Subnet1Public
  Subnet2PublicId:
    Export:
      Name: !Sub "${AWS::StackName}-Subnet2PublicId"
    Value: !Ref Subnet2Public
  Subnet3PublicId:
    Export:
      Name: !Sub "${AWS::StackName}-Subnet3PublicId"
    Value: !Ref Subnet3Public
